Index: Assignment5.py
===================================================================
--- Assignment5.py	(revision 409)
+++ Assignment5.py	(working copy)
@@ -1,4 +1,3 @@
-
 import tkMessageBox
 import sys,os
 import Tkinter as root
@@ -24,8 +23,6 @@
         self.window = root.Tk()
         self.window.title(title)
         self.window.geometry('%dx%d+%d+%d' % (width, height, X, Y))
-        
-        
     def show(self):
         self.window.mainloop()
         return
@@ -103,9 +100,6 @@
 
 
 
-
-
-
 ''' WIDGETS: CheckBox '''
 class CheckBox(object):
     controller = None
@@ -153,6 +147,8 @@
         button_controller.select()
 globalvar=0
 
+
+''' WIDGETS: RadioButton '''
 class RadioButton(object):
     controller = None
     labels=""
@@ -185,8 +181,8 @@
 
 
 
-''' WIDGETS: ListBox '''
-class ListBox(object):
+''' WIDGETS: ComboBox '''
+class ComboBox(object):
     controller = None
     Type = None
     list_var = 0
@@ -216,67 +212,89 @@
          return self.list_var1.get()
 
 
+''' WIDGETS: Password Box '''
+class PasswordBox:
+    controller = None
+    callback = None
+    Type= "Password"
+    def __init__(self,text,X,Y,width,height,cntrl):
+        frame = root.Frame(cntrl.window, width=width,height=height)
+        frame.pack_propagate(0) # don't shrink
+        frame.pack()
+        frame.place(x=X,y=Y)
+        self.controller = root.Entry(frame, show="*")
+        self.controller.pack(fill=root.BOTH, expand=1)
+        self.controller.insert(root.INSERT,text)
 
+    def getText(self):
+        return self.controller.get()
 
+    def setText(self):
+        self.controller.delete(1.0, root.END)
+        return True
+    
 
+def Submit():
+    newps1 = NewPstb.getText();
+    newps2 = ReNewPstb.getText();
+    if(IsValidPswd(newps1,newps2)):
+        print (" Password Successfully Changed ! ");
+    else:
+        print (" Retry by Entering new Password!  ");
+ 
 
 
-if __name__ == '__main__':
 
-        def call_method():
-            print ("\n Your Entered Data \n");
-            print ("****************************\n")
-            print ("Your Name :  "+ tb.getText());
-         #   print ("Your Favourite Tool-Kit is :  "+rbgrp.getValue())
-            if(ck1.getCheckState()==True):
-			   print ("You Love Animals")
-            if(ck2.getCheckState()==True):
-               print("You Love Birds")
-            print("Your Favourite Animal is : "+ listBox.Selected());
-			
-			
-        def exit_method():
-            print 'tkPython window made by Aditya Gujral'
-            return
+
+
+def IsValidPswd(newps1, newps2):
+    if newps1 != newps2:
+       print(" Password Error !  Passwords donot match! ")
+       return False
+    
+    if(len(newps1)<=6):               # Check the length of the password
+       print(" Password Error ! Password Length should be more than 6. ")
+       return False    
+    
+    if(str(newps1).isalnum()):             #checks if password conatins only alpha or numeric fiels
         
+        if(str(newps1).isalpha()):          # invalidates if  password contains only alphabets not a combination.
+            print(" Password Error ! Password cannot be only alphabet.Try combination! ")
+            return False   
         
-        WindowPanel = myWindow('wxPython Window By Aditya Gujral' ,50,50,450,400)
+        elif(str(newps1).isdigit()):	    #Invalidates if password contains only digits not a combination.
+            print(" Password Error ! Password cannot be only digit.Try combination! ")
+            return False
         
-        #Labels
-        nameLbl=Label("Your Name :",20,15,80,30,WindowPanel)
-        toollbl=Label("Your Favourite Tool-Kit",15,100,140,40,WindowPanel)
-        Listlbl=Label("Your Favourite Animal",280,30,160,60,WindowPanel)
-        
-        #Buttons
-        btn= Button("Print On Console",30,320,150,50,WindowPanel)
-        btn.buttonListener(call_method)
-        
-        #Checkboxes
-        ck1=CheckBox("I Love Animals ",20,45,150,50,WindowPanel)
-        ck1.setCheckState(0)
-        ck2=CheckBox("I Love Birds ",150,45,150,50,WindowPanel)
-        ck2.setCheckState(2)
-        
-        
-        
-        #Radios
-        rbgrp=ButtonGroup(WindowPanel)
-        
-        rb1=RadioButton("PyQT4",10,140,100,20,WindowPanel)
-        rb2=RadioButton("Wx-Python",10,160,100,20,WindowPanel)
-        rb3=RadioButton("PyGTK",10,180,100,20,WindowPanel)
-        rb4=RadioButton("Tkinter",10,200,100,20,WindowPanel)
-        
-        rlist=[rb1,rb2,rb3,rb4]
-        rbgrp.addButtons(rlist)
-        #Textbox
-        tb=TextBox("",100,15,150,30,WindowPanel)
-        
-        #Listbox
-        myList=["Elephant","Peacock","Bear","Lion","Tiger","Leopard","Dog","Cat","Wolf","Spider","Parrot","Nightingale"]
-        listBox=ListBox("Choose Animal",myList,250,80,180,190,WindowPanel)
-        
-        
-        Exit_btn= Button("Info",260,320,150,50,WindowPanel)
-        Exit_btn.buttonListener(exit_method)
-        WindowPanel.show()
+        else :			                     
+            print ("Password Successfully Changed. !");
+            return True
+    else:                                            # Invalidates if password have non-alphanumeric characters.
+       print (" Password Error ! Password should contain only alphabets and digits.");
+       return False
+
+
+
+
+
+
+
+
+
+
+WindowPanel = myWindow('tkWindow by Aditya Gujral' ,50,50,350,250)
+      
+userLbl=Label("Name :",20,15,80,30,WindowPanel)
+OldPswdLbl=Label("Old Password",20,50,140,30,WindowPanel)
+NewPswdLbl=Label("New Password",20,85,160,30,WindowPanel)
+ReNwPsLbl=Label("Repeat Password",20,120,160,30,WindowPanel)
+usrtb=TextBox("",150,15,150,30,WindowPanel)
+OldPstb=PasswordBox("",150,50,150,30,WindowPanel)
+NewPstb=PasswordBox("",150,85,150,30,WindowPanel)
+ReNewPstb=PasswordBox("",150,120,150,30,WindowPanel)
+    
+btn= Button("Submit",30,180,100,35,WindowPanel)    
+btn.buttonListener(Submit)
+      
+if __name__ == '__main__':
+    WindowPanel.show()
Index: tk5Test.py
===================================================================
--- tk5Test.py	(revision 0)
+++ tk5Test.py	(revision 0)
@@ -0,0 +1,54 @@
+import Assignment5
+import unittest
+
+class TestMainFunction(unittest.TestCase):
+
+    # test for success
+    def test1(self):
+            IsValid = Assignment5.IsValidPswd("shanu123","shanu123")
+            self.assertEqual(IsValid,True);
+
+    # test for failure when password and re-entered password not equal
+    def test2(self):
+		    IsValid = Assignment5.IsValidPswd("shanu1234","shanu123")
+		    self.assertEqual(IsValid,False);
+
+    # test for failure when paswword length is not more than 6.
+    def test3(self):
+            IsValid = Assignment5.IsValidPswd("shanu1","shanu1")
+            self.assertEqual(IsValid,False);# test for failure when password contains all digits
+    
+   # Test for failure when password contains only alphabets
+    def test4(self):
+            IsValid = Assignment5.IsValidPswd("shanushanu","shanushanu")
+            self.assertEqual(IsValid,False);
+
+ # test for failure when password contains only digits
+ 
+    def test5(self):
+            IsValid = Assignment5.IsValidPswd("1234567","1234567")
+            self.assertEqual(IsValid,False);
+
+     # test for failure when password has non-alphanumeric characters
+    def test6(self):
+            IsValid = Assignment5.IsValidPswd("shanu$123","shanu$123")
+            self.assertEqual(IsValid,False);
+
+	# test for failure when one field is empty
+   
+    def test7(self):
+            IsValid = Assignment5.IsValidPswd("shanu123","")
+            self.assertEqual(IsValid,False);
+
+	 # test for failure when both fields are empty
+   
+    def test8(self):
+            IsValid = Assignment5.IsValidPswd("","")
+            self.assertEqual(IsValid,False);
+
+    # test for failure when the two passwords have different cases
+    def test9(self):
+            IsValid = Assignment5.IsValidPswd("shanu123","SHANU123")
+            self.assertEqual(IsValid,False);
+if __name__ == '__main__':
+    unittest.main()
