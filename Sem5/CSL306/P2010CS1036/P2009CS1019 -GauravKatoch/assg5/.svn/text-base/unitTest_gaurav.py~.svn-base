from AnyGUI.xGUI import *
import unittest
xGUI(Environment = "fltk")

#Functions bind to button events
def SubmitButtonClick(event=None):    
    newpassword1 = newpassText1.getText();
    newpassword2 = newpassText2.getText();
    response = validatePassword(newpassword1,newpassword2) 
    if(response == 0):
        storePass = newpassword1;
        oldpassText.setText(rentSecure(storePass,secure));
        consoleText.setText("Password has been changed\n");
    elif(response == -1):        
        consoleText.setText("Unknown error\n");
    elif(response == -2):        
        consoleText.setText("Error: Both the new password are not same\n")
    elif(response == -3):        
        consoleText.setText("Error: Password is less than six letter\n")
    elif(response == -4):
        consoleText.setText("Error: Password is not alphanumeric\n")
    return


storePass = "oldpassword"
secure = True

def rentSecure(password,isSecure):
    if(isSecure):
        for i in range(len(password)):
           password = password.replace(password[i],"*")
    print isSecure,password
    return password

def ShowButtonClick(event=None):
    global storePass,secure
    if(secure == False):
        secure = True        
        storePass = oldpassText.getText()
    else:
        secure = False
    oldpassText.setText(rentSecure(storePass,secure))
    return True

def validatePassword(newpassword1,newpassword2):
    '''error_code
        0   succes
        -1  no valid response
        -2  no mismatch
        -3  str length is less than 6
        -4  not alpha numeric
        '''
    try:
        v1 = newpassword1.isalnum()
        v2 = newpassword2.isalnum()
    except:
        raise TypeError

    error_code = -1
    if(newpassword2!=newpassword1):
        error_code = -2
    if(len(newpassword1)<6):
        error_code = -3

    if(error_code == -1):
        valid = False
        for i in range(len(newpassword1)):
            if(newpassword1[i].isalpha()==False):
                if(newpassword1[i].isdigit()==True):
                    valid = True
        if(valid):
            error_code = 0   
        else:          
            error_code = -4
    return error_code



class TestValidateFunctions(unittest.TestCase):

    #def setUp(self):
        #self.error_code = 0

    def test_validateInputType(self):
        password1 = 1
        password2 = "password2"
        #self.assertEqual(validatePassword(password1,password2), -2)
        self.assertRaises(TypeError, validatePassword)

    def test_validateMismatch(self):
        password1 = "password1"
        password2 = "password2"
        self.assertEqual(validatePassword(password1,password2), -2)

    def test_validateLength(self):        
        password1 = "pass1"
        password2 = "pass1"
        self.assertEqual(validatePassword(password1,password2), -3)

    def test_validateAplha(self):
        password1 = "password"
        password2 = "password"
        self.assertEqual(validatePassword(password1,password2), -4)

    def test_validateSuccess(self):
        password1 = "password1"
        password2 = "password1"
        self.assertEqual(validatePassword(password1,password2), 0)


if __name__ == '__main__':
    unittest.main()

    #Constructor canvas
    canvas = Canvas(1, 'gtkGUI -v1.0 | GauravKatoch' ,310,350)


    #username
    nameLabel = LabelText("Username :",10,0,500,20);
    nameText = TextField("Enter Name",150,20,150,20);
    canvas.add(nameLabel);
    canvas.add(nameText);

    #oldpassword
    oldpassLabel = LabelText("Current password :",0,40,500,20);
    oldpassText = TextField(rentSecure(storePass,secure),150,60,150,20);
    showBtn = Button("show password",150,85,150,20)
    showBtn.clickListener(ShowButtonClick)
    canvas.add(oldpassLabel);
    canvas.add(oldpassText);
    canvas.add(showBtn);

    #newpassword
    newpassLabel = LabelText("New password :",10,120,500,20);
    newpassText1 = TextField("Enter New Password",150,140,150,20);
    newpassText2 = TextField("Enter New Password Again",150,160,150,20);
    canvas.add(newpassLabel);
    canvas.add(newpassText1);
    canvas.add(newpassText2);

    consoleText = TextArea("",10,200,290,70);
    canvas.add(consoleText)

    #Creating Buttons
    submitBtn = Button("Submit",100,300,120,30)

    #Callback methods on buttons click
    submitBtn.clickListener(SubmitButtonClick)

    #Adding buttons to canvas
    canvas.add(submitBtn)

    canvas.show()

